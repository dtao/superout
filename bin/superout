#!/usr/bin/env node

var http  = require('http'),
    fs    = require('fs'),
    path  = require('path'),
    spawn = require('child_process').spawn;

var html = fs.readFileSync(path.join(__dirname, '../resources/index.html'), 'utf8'),
    css  = fs.readFileSync(path.join(__dirname, '../resources/styles.css'), 'utf8'),
    js   = fs.readFileSync(path.join(__dirname, '../resources/script.js'), 'utf8');

var updates = [];

var server = http.createServer(function(req, res) {
  switch (req.url) {
    case '/':
      res.writeHead(200, { 'Content-Type': 'text/html' });
      res.write(html);
      res.end();
      break;

    case '/updates':
      res.writeHead(200, { 'Content-Type': 'application/json' });
      res.write(JSON.stringify(updates));
      updates = [];
      res.end();
      break;

    case '/styles.css':
      res.writeHead(200, { 'Content-Type': 'text/css' });
      res.write(css);
      res.end();
      break;

    case '/script.js':
      res.writeHead(200, { 'Content-Type': 'text/javascript' });
      res.write(js);
      res.end();
      break;

    default:
      res.writeHead(404, { 'Content-Type': 'text/plain' });
      res.write('Not Found');
      res.end();
  }
});

var args = process.argv.slice(2);

var proc = spawn(args[0], args.slice(1), {
  cwd: process.cwd()
});

proc.stdout.setEncoding('utf8');

var counter = 1;
proc.stdout.on('data', function(data) {
  updates.push({
    id: counter++,
    timestamp: Date.now(),
    message: data
  });
});

console.log('Go to http://localhost:8080');
server.listen(8080);
